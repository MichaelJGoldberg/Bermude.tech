#include <iostream> 
#include <conio.h> 
#include <Windows.h> 
using namespace std; 

bool gameOver; 
const int width = 40; 
const int height = 17; 
int x, y, fruitX, fruitY, score; 
int tailX[100], tailY[100]; 
int nTail; 
enum eDirection { STOP = 0, LEFT, RIGHT, UP, DOWN }; 
eDirection dir; 

void setcur(int x, int y) 
{ 
COORD coord; 
coord.X = x; 
coord.Y = y; 
SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord); 
} 


void Setup() { 

gameOver == false; 
dir = STOP; 
x = width / 2 - 1; 
y = height / 2 - 1; 
fruitX = rand() % width; 
fruitY = rand() % height; 
score = 0; 
} 
void Draw() { 
//system("cls"); 
setcur(0, 0); 
cout << "SOLDIER SNAKE v.0.2" << endl;; 
//cout << "Score: " << score << endl; 
for (int i = 0; i < width + 1; i++) 
cout << "#"; 
cout << endl; 

for (int i = 0; i < height + 1; i++) { 
for (int j = 0; j < width + 1; j++) { 
if (j == 0 || j == width - 1) 
cout << "#"; 
if (i == y && j == x) 
cout << "0"; 
else if (i == fruitY && j == fruitX) 
cout << "F"; 
else { 
bool print = false; 
for (int k = 0; k < nTail; k++) { 
if (tailX[k] == j && tailY[k] == i) { 
print = true; 
cout << "o"; 
} 
} 
if (!print) 
cout << " "; 
} 
} 
cout << endl; 
} 
for (int i = 0; i < width + 1; i++) 
cout << "#"; 
cout << endl; 
cout << "Score: " << score << endl; 
switch (score) 
{ 
case 30: 
cout << "This is just a warm up, soldier!"<<endl ; 
break; 
case 50: 
cout << "I see you learns quik, soldier!"<<endl; 
break; 
case 80: 
cout << "My grandma does this better, soldier, hurry up!"<<endl; 
break; 
case 100: 
cout << "First hundred, soldier, why is it so slow!"<<endl; 
break; 
case 120: 
cout << "You promoted to the major, soldier, but actually "; 
cout << "you have not deservded it still."<<endl; 
break; 
case 150: 
cout << "You think 150 is cool? It is not, soldier!"<<endl; 
break; 
case 180: 
cout << "Why are you playing so slow? Faster!" << endl; 
break; 
case 200: 
cout << "You became a man, i am so proud of you! "<<endl; 
break; 
case 250: 
cout << "Goodbie, soldier. You do not even need my help."<<endl; 
break; 
} 
} 


void Input() { 
if (_kbhit()) { 
switch (_getch()) 
{ 
case 'a': 
dir = LEFT; 
break; 
case 'd': 
dir = RIGHT; 
break; 
case 'w': 
dir = UP; 
break; 
case 's': 
dir = DOWN; 
break; 
case 'g': 
gameOver = true; 
break; 
} 
} 

} 
void Logic() { 

Sleep(120); 
int prevX = tailX[0]; 
int prevY = tailY[0]; 
int prev2X, prev2Y; 
tailX[0] = x; 
tailY[0] = y; 
for (int i = 1; i < nTail; i++) 
{ 
prev2X = tailX[i]; 
prev2Y = tailY[i]; 
tailX[i] = prevX; 
tailY[i] = prevY; 
prevX = prev2X; 
prevY = prev2Y; 
} 
switch (dir) 
{ 
case LEFT: 
x--; 
break; 
case RIGHT: 
x++; 
break; 
case UP: 
y--; 
break; 
case DOWN: 
y++; 
break; 
} 

//if (x > width || x < 0 ) 
//gameOver = true; 
if (x >= width - 1) 
x = 0; 
else if (x < 0) 
x = width - 2; 

if (y >= height + 2) 
y = 0; 
else if (y < 0) 
y = height + 2; 

for (int i = 0; i < nTail; i++) { 
if (tailX[i] == x && tailY[i] == y) 
gameOver = true; 
} 
if (x == fruitX && y == fruitY) 
{ 
score += 10; 
fruitX = rand() % width; 
fruitY = rand() % height; 
nTail++; 

} 
} 
int main() { 


Setup(); 
while (!gameOver) { 
Draw(); 
Input(); 
Logic(); 
} 



system("pause"); 


return 0; 
}
